{"version":3,"sources":["assets/eservices.jpg","pages/Home.js","pages/Programs.js","pages/Schedule.js","components/AddStationModal.js","components/EditStationModal.js","components/DeleteStationModal.js","pages/Stations.js","pages/NotFoundPage.js","components/NavigationBar.js","components/Jumbotron.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","className","Component","Programs","props","state","stations","programs","schedule","this","refreshList","getPrograms","fetch","method","headers","then","response","json","data","setState","catch","error","console","log","Table","striped","bordered","hover","size","map","program","key","_id","programTitle","programId","hostingStationName","scheduleId","Schedule","schedules","getSchedule","dayOfTheWeek","from","to","AddStationModal","event","preventDefault","body","JSON","stringify","stationId","target","StationID","value","stationName","StationName","stationLogo","StationLogo","alert","window","location","reload","Modal","aria-labelledby","centered","Header","closeButton","Title","id","Body","Row","Col","sm","Form","onSubmit","handleSubmit","Group","as","controlId","Label","Control","type","name","required","placeholder","Button","variant","Footer","onClick","onHide","EditStationModal","_ID","style","display","disabled","defaultValue","st_id","stid","stname","stlogo","DeleteStationModal","Stations","addModalShow","editModalShow","deleteModalShow","getStation","station","ButtonToolbar","show","NotFoundPage","Styles","styled","div","NavigationBar","Navbar","expand","bg","Brand","href","Toggle","aria-controls","Collapse","Nav","Item","Link","inline","FormControl","habeshaITImage","Jumbotron","fluid","Container","App","Fragment","basename","exact","path","component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f8eb719a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/eservices.4105d0f7.jpg\";","import React, { Component } from 'react';\n\n\nexport class Home extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row mt-5\">\n            <h2>Home Page</h2>\n        </div>\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport {Table} from 'react-bootstrap';\n\n\nexport class Programs extends Component {\n    constructor(props){\n        super(props);\n        this.state={stations:[],\n                    programs:[],\n                    schedule:[]}\n    }\n\n    componentDidMount(){\n        this.refreshList();\n    }\n    refreshList(){\n        this.getPrograms();\n    }\n\n    getPrograms(){\n         fetch('http://'+process.env.REACT_APP_API_HOST+':60601/program/', {\n        //    fetch('http://192.168.1.34:8080/program/', {\n            method: 'GET',\n            headers:{\n                'Content-Type': 'application/json',\n                 'Accept': 'application/json'\n            }\n        })\n        .then(response=> response.json())\n        .then(data=>{\n            this.setState({programs:data});\n        })\n        .catch(function(error) {\n            console.log(\"Error Found : \"+error);\n          }); \n    }\n\n  render() {\n    const {programs}=this.state;\n    return (\n        <div className=\"container\">\n          <div className=\"row mt-5\">\n              <h2>Programs Page</h2>\n          </div>\n          <Table className=\"mt-4\" striped bordered hover size=\"sm\">\n          <thead>\n              <tr>\n                  <th>Program Title</th>\n                  <th>Program Id</th>\n                  <th>Hosting Station </th>\n                  <th>Schedule Id</th>\n              </tr>\n          </thead>\n          <tbody>\n              {programs.map(program=>\n                  <tr key ={program._id}>\n                  <td>{program.programTitle}</td>\n                  <td>{program.programId}</td>\n                  <td>{program.hostingStationName}</td>\n                  <td>{program.scheduleId}</td>\n                  </tr>)}\n          </tbody>\n          </Table>\n        </div>\n      );\n    }\n  }\n","import React, { Component } from 'react';\nimport {Table} from 'react-bootstrap';\n\n\nexport class Schedule extends Component {\n    constructor(props){\n        super(props);\n        this.state={stations:[],\n                    programs:[],\n                    schedules:[]}\n    }\n\n    componentDidMount(){\n        this.refreshList();\n    }\n    refreshList(){\n        this.getSchedule();\n    }\n    getSchedule(){\n         fetch('http://'+process.env.REACT_APP_API_HOST+':60601/schedule/', {\n        //fetch('http://192.168.1.34:8080/schedule/', {\n            method: 'GET',\n            headers:{\n                'Content-Type': 'application/json',\n                 'Accept': 'application/json'\n            }\n        })\n        .then(response=> response.json())\n        .then(data=>{\n            this.setState({schedules:data});\n        })\n        .catch(function(error) {\n            console.log(\"Error Found : \"+error);\n          }); \n    }\n  render() {\n    const {schedules}=this.state;\n    return (\n        <div className=\"container\">\n          <div className=\"row mt-5\">\n              <h2>Schedule Page</h2>\n          </div>\n          <Table className=\"mt-4\" striped bordered hover size=\"sm\">\n          <thead>\n              <tr> \n                  <th>Schedule Id</th>\n                  <th>Day </th>\n                  <th>Start Time</th>\n                  <th>End Time</th>\n              </tr>\n          </thead>\n          <tbody>\n              {schedules.map(schedule=>\n                  <tr key ={schedule._id}>\n                  <td>{schedule.scheduleId}</td>\n                  <td>{schedule.dayOfTheWeek}</td>\n                  <td>{schedule.from}</td>\n                  <td>{schedule.to}</td>\n                  </tr>)}\n          </tbody>\n          </Table>\n        </div>\n      );\n    }\n  }","import React, { Component } from 'react';\nimport { Modal, Button, Row, Col, Form } from 'react-bootstrap';\n\nexport class AddStationModal extends Component {\n    // constructor(props){\n    //     super(props);\n    // }\n\n    handleSubmit(event) {\n        event.preventDefault();\n         fetch('http://'+process.env.REACT_APP_API_HOST+':60601/station/', {     \n    //  fetch('http://192.168.1.34:8080/station/', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            body: JSON.stringify({\n                stationId: event.target.StationID.value,\n                stationName: event.target.StationName.value,\n                stationLogo: event.target.StationLogo.value\n            })\n        })\n            .then(response => response.json())\n            .then(data => {\n                alert('Successfuly Added Station ');\n                window.location.reload();\n                // this.props.history.push(\"/stations\");\n                // this.addModalShow=false; // props.onHide; \n            },\n                (error) => {\n                    alert('Failed')\n                })\n            .catch(function (error) {\n                console.log(\"Error Found : \" + error);\n            });\n    }\n    render() {\n        return (\n            <Modal\n                {...this.props}\n                size=\"lg\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\n                        Add Statoin\n          </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <div className=\"container\">\n                        <Row>\n                            <Col sm={6}>\n                                <Form onSubmit={this.handleSubmit}>\n\n                                    <Form.Group as={Row} controlId=\"StationID\">\n                                        <Form.Label>Station ID    : </Form.Label>\n                                        <Col>\n                                            <Form.Control\n                                                type=\"text\"\n                                                name=\"StationID\"\n                                                required\n                                                placeholder=\"StationID\"\n                                            />\n                                        </Col>\n                                    </Form.Group>\n\n                                    <Form.Group as={Row} controlId=\"StationName\">\n                                        <Form.Label>Station Name : </Form.Label>\n                                        <Col><Form.Control\n                                            type=\"text\"\n                                            name=\"StationName\"\n                                            required\n                                            placeholder=\"St. Name\"\n                                        />\n                                        </Col>\n                                    </Form.Group>\n\n                                    <Form.Group as={Row} controlId=\"StationLogo\">\n                                        <Form.Label>Station Logo : </Form.Label>\n                                        <Col><Form.Control\n                                            type=\"text\"\n                                            name=\"StationLogo\"\n                                            required\n                                            placeholder=\"St. Logo\"\n                                        />\n                                        </Col>\n                                    </Form.Group>\n                                    <Form.Group>\n                                        <Button variant=\"primary\" type=\"submit\">\n                                            Add Station\n            </Button>\n                                    </Form.Group>\n                                </Form>\n\n                            </Col>\n                        </Row>\n                    </div>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\n                </Modal.Footer>\n            </Modal>\n        );\n    }\n}","import React, { Component } from 'react';\nimport { Modal, Button, Row, Col, Form } from 'react-bootstrap';\n\nexport class EditStationModal extends Component {\n    // constructor(props){\n    //     super(props);\n    // }\n   \n\n    handleSubmit(event) {\n        event.preventDefault();\n        fetch('http://'+process.env.REACT_APP_API_HOST+':60601/station/'+event.target._ID.value, {\n        // fetch('http://192.168.1.34:8080/station/'+event.target._ID.value, {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            body: JSON.stringify({\n                stationId: event.target.StationID.value,\n                stationName: event.target.StationName.value,\n                stationLogo: event.target.StationLogo.value\n            })\n        })\n           .then(() => {\n                alert('Successfuly Edited Station ');\n                window.location.reload();\n             })\n            .catch(function (error) {\n                console.log(\"Error Found : \" + error);\n            });\n    }\n    render() {\n        return (\n            \n            <Modal\n                {...this.props}\n                size=\"lg\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n            >\n            \n                <Modal.Header closeButton>\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\n                        Update Station\n          </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <div className=\"container\">\n                        <Row>\n                            <Col sm={6}>\n                                <Form onSubmit={this.handleSubmit} >\n                                {/* passing hiden element just to use the event attribute when passing will figure out better way */}\n                                <Form.Group as={Row} controlId=\"_ID\" style={{display: 'none'}} >\n                                        \n                                        <Col>\n                                            <Form.Control\n                                                type=\"text\"\n                                                name=\"_ID\"\n                                                required\n                                                disabled\n                                                defaultValue={this.props.st_id}\n                                            />\n                                        </Col>\n                                    </Form.Group>\n\n                                    <Form.Group as={Row} controlId=\"StationID\">\n                                        <Form.Label>Station ID    : </Form.Label>\n                                        <Col>\n                                            <Form.Control\n                                                type=\"text\"\n                                                name=\"StationID\"\n                                                required\n                                                disabled\n                                                defaultValue={this.props.stid}\n                                            />\n                                        </Col>\n                                    </Form.Group>\n\n                                    <Form.Group as={Row} controlId=\"StationName\">\n                                        <Form.Label>Station Name : </Form.Label>\n                                        <Col><Form.Control\n                                            type=\"text\"\n                                            name=\"StationName\"\n                                            required\n                                            defaultValue={this.props.stname}\n                                        />\n                                        </Col>\n                                    </Form.Group>\n\n                                     <Form.Group as={Row} controlId=\"StationLogo\">\n                                        <Form.Label>Station Logo : </Form.Label>\n                                        <Col><Form.Control\n                                            type=\"text\"\n                                            name=\"StationLogo\"\n                                            required\n                                            defaultValue={this.props.stlogo}\n                                        />\n                                        </Col>\n                                    </Form.Group>\n\n                                    <Form.Group>\n                                        <Button variant=\"primary\" type=\"submit\">\n                                            Update Station\n            </Button>\n                                    </Form.Group>\n                                </Form>\n\n                            </Col>\n                        </Row>\n                    </div>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\n                </Modal.Footer>\n            </Modal>\n        );\n    }\n}","import React, { Component } from 'react';\nimport { Modal, Button, Row, Col, Form } from 'react-bootstrap';\n\nexport class DeleteStationModal extends Component {\n \n   \n\n    handleSubmit(event) {\n        event.preventDefault();\n         fetch('http://'+process.env.REACT_APP_API_HOST+':60601/station/'+event.target._ID.value, {\n        //fetch('http://192.168.1.34:8080/station/'+event.target._ID.value, {\n            method: 'DELETE',\n            headers:{\n                'Content-Type': 'application/json',\n                 'Accept': 'application/json'\n            },\n        })\n        .then(() => {\n            console.log('removed');\n            alert(\"Station Removed\");\n            window.location.reload();\n         })\n        .catch(function(error) {\n            console.log(\"Error Found : \"+error);\n          }); \n    }\n    render() {\n        return (\n            \n            <Modal\n                {...this.props}\n                size=\"lg\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n            >\n            \n                <Modal.Header closeButton>\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\n                        Are you Sure you want to Delete Station?\n          </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <div className=\"container\">\n                        <Row>\n                            <Col sm={6}>\n                                <Form onSubmit={this.handleSubmit} >\n                                {/* passing hiden element just to use the event attribute when passing will figure out better way */}\n                                <Form.Group as={Row} controlId=\"_ID\" style={{display: 'none'}} >\n                                        \n                                        <Col>\n                                            <Form.Control\n                                                type=\"text\"\n                                                name=\"_ID\"\n                                                required\n                                                \n                                                defaultValue={this.props.st_id}\n                                            />\n                                        </Col>\n                                    </Form.Group>\n\n                                    <Form.Group as={Row} controlId=\"StationID\">\n                                        <Form.Label>Station ID    : </Form.Label>\n                                        <Col>\n                                            <Form.Control\n                                                type=\"text\"\n                                                name=\"StationID\"\n                                                required\n                                                disabled\n                                                defaultValue={this.props.stid}\n                                            />\n                                        </Col>\n                                    </Form.Group>\n\n                                    <Form.Group as={Row} controlId=\"StationName\">\n                                        <Form.Label>Station Name : </Form.Label>\n                                        <Col><Form.Control\n                                            type=\"text\"\n                                            name=\"StationName\"\n                                            disabled\n                                            defaultValue={this.props.stname}\n                                        />\n                                        </Col>\n                                    </Form.Group>\n\n                                    <Form.Group as={Row} controlId=\"StationLogo\">\n                                        <Form.Label>Station Logo : </Form.Label>\n                                        <Col><Form.Control\n                                            type=\"text\"\n                                            name=\"StationLogo\"\n                                            disabled\n                                            defaultValue={this.props.stlogo}\n                                        />\n                                        </Col>\n                                    </Form.Group>\n\n                                    <Form.Group>\n                                        <Button variant=\"danger\" type=\"submit\">\n                                            Confirm Deletion\n            </Button>\n                                    </Form.Group>\n                                </Form>\n\n                            </Col>\n                        </Row>\n                    </div>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"info\" onClick={this.props.onHide}>Cancel</Button>\n                </Modal.Footer>\n            </Modal>\n        );\n    }\n}","import React, { Component } from 'react';\nimport {Table, Button, ButtonToolbar} from 'react-bootstrap';\nimport { AddStationModal } from '../components/AddStationModal';\nimport { EditStationModal} from '../components/EditStationModal';\nimport { DeleteStationModal} from '../components/DeleteStationModal'\n\nexport class Stations extends Component {\n\n    constructor(props){\n        super(props);\n        this.state={stations:[],\n                    addModalShow:false,\n                    editModalShow:false,\n                    deleteModalShow: false\n                }\n    }\n\n    componentDidMount(){\n        this.refreshList();\n    }\n    // componentDidUpdate(){\n    //     this.refreshList();\n    // }\n    refreshList(){\n        this.getStation();\n       // this.setState({stations:stations});\n    }\n\n   \n     getStation(){\n         fetch('http://'+process.env.REACT_APP_API_HOST+':60601/station/', {\n         //   fetch('http://192.168.1.34:8080/station/', {\n            method: 'GET',\n            headers:{\n                'Content-Type': 'application/json',\n                 'Accept': 'application/json'\n            }\n        })\n        .then(response=> response.json())\n        .then(data=>{\n            this.setState({stations:data});\n        })\n        .catch(function(error) {\n            console.log(\"Error Found : \"+error);\n          }); \n    }\n    // delete_station(st_id){\n    //     fetch('http://localhost:8080/station/'+st_id, {\n    //         method: 'DELETE',\n    //         headers:{\n    //             'Content-Type': 'application/json',\n    //              'Accept': 'application/json'\n    //         },\n    //     })\n    //     .then(() => {\n    //         console.log('removed');\n    //         alert(\"Station Removed\")\n    //      })\n    //     .catch(function(error) {\n    //         console.log(\"Error Found : \"+error);\n    //       }); \n    // }\n\n  render() {\n      const {stid, stname,stlogo, st_id}=this.state;\n      let addModalClose =() => this.setState({addModalShow: false})\n      let editModalClose =() => this.setState({editModalShow:false})\n      let deleteModalClose =() => this.setState({deleteModalShow:false})\n    return (\n      <div className=\"container\">\n        <div className=\"row mt-5\">\n            <h2>Stations Page</h2>\n        </div>\n        <Table className=\"mt-4\" striped bordered hover size=\"sm\">\n        <thead>\n            <tr>\n                <th>Station Name</th>\n                <th>Station Id</th>\n                <th>Station Logo</th>\n                <th>Options</th>\n            </tr>\n        </thead>\n        <tbody>\n            {this.state.stations.map(station=>\n                <tr key ={station._id}>\n                <td>{station.stationId}</td>\n                <td>{station.stationName}</td>\n                <td>{station.stationLogo}</td>\n                <td>\n                    <ButtonToolbar>\n                        <Button className=\"mr-2\" variant=\"info\"\n                        onClick= {()=> this.setState({editModalShow:true, stid : station.stationId, stname: station.stationName,stlogo: station.stationLogo, st_id:station._id})}\n                        >\n                            Edit\n                        </Button>\n                        <Button className=\"mr-2\" variant=\"danger\" \n                        onClick= {()=> this.setState({deleteModalShow:true, stid : station.stationId, stname: station.stationName,stlogo: station.stationLogo, st_id:station._id})}\n                        >\n                            Delete\n                        </Button>\n                    </ButtonToolbar>\n                </td>\n                </tr>)}\n        </tbody>\n        </Table>\n\n<ButtonToolbar>\n    <Button\n        variant='primary'\n        onClick={()=> {this.setState({addModalShow: true});\n        console.log(\"Clicked Add Station \"+this.state.addModalShow)\n        }}>\n        Add Station\n    </Button>\n</ButtonToolbar>\n<AddStationModal\n    show={this.state.addModalShow}\n    onHide={addModalClose}\n/>\n<EditStationModal\n    show={this.state.editModalShow}\n    onHide={editModalClose}\n    st_id={st_id}\n    stid={stid}\n    stname={stname}\n    stlogo={stlogo}\n/>\n<DeleteStationModal\n    show={this.state.deleteModalShow}\n    onHide={deleteModalClose}\n    st_id={st_id}\n    stid={stid}\n    stname={stname}\n    stlogo={stlogo}\n/>\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\n\n\nexport class NotFoundPage extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row mt-5\">\n  <h2>Not Found Page</h2>\n        </div>\n      </div>\n    );\n  }\n}","import React from 'react';\nimport {Nav, Navbar, Form, FormControl, Button, } from 'react-bootstrap';\nimport styled from 'styled-components';\n\n\nconst Styles = styled.div`\n.navbar {\n    background-color: #222;\n}\n\n.navbar-brand, .navbar-nav .nav-link {\n    color: #bbb;\n\n    &:hover {\n        color: white;\n    }\n}\n`;\nexport const NavigationBar = () => (\n    <Styles>\n        <Navbar expand=\"md\" bg=\"dark\" variant=\"dark\">\n            <Navbar.Brand href=\"/\">Utopian</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\"/>\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"ml-auto\">\n                    <Nav.Item><Nav.Link href=\"/\">Home</Nav.Link></Nav.Item>\n                    <Nav.Item><Nav.Link href=\"/programs\">Programs</Nav.Link></Nav.Item>\n                    <Nav.Item><Nav.Link href=\"/schedule\">Schedule</Nav.Link></Nav.Item>\n                    <Nav.Item><Nav.Link href=\"/stations\">Stations</Nav.Link></Nav.Item>\n                </Nav>\n                <Form inline>\n      <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n         <Button variant=\"outline-success\">Search</Button>\n      </Form>\n            </Navbar.Collapse>\n        </Navbar>\n    </Styles>\n)","import React from 'react';\nimport {Jumbotron as Jumbo, Container} from 'react-bootstrap';\nimport styled from 'styled-components';\nimport habeshaITImage from '../assets/eservices.jpg'\n\nconst Styles =styled.div`\n.jumbo {\n    background: url(${habeshaITImage}) no-repeat fixed bottom;\n    background-size: cover;\n    color: #efefef;\n    height: 200px;\n    position: relative;\n    z-index: -2;\n}\n\n.overlay {\n    background-color: #000;\n    opacity: 0.6;\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n    z-index: -1;\n}\n`;\n\nexport const Jumbotron = () => (\n    <Styles>\n        <Jumbo fluid className=\"jumbo\">\n        <Container>\n            <h1>Welcome to</h1>\n            <p>TvGuide Web</p>\n        </Container>\n        </Jumbo>\n    </Styles>\n)","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Home} from './pages/Home';\nimport {Programs} from './pages/Programs';\nimport {Schedule} from './pages/Schedule';\nimport {Stations} from './pages/Stations'\nimport {NotFoundPage} from './pages/NotFoundPage';\nimport {NavigationBar} from './components/NavigationBar'\nimport {Jumbotron} from './components/Jumbotron'\nimport {HashRouter,BrowserRouter as Router, Route, Switch} from 'react-router-dom';\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <NavigationBar/>\n      <Jumbotron/>\n      <HashRouter basename='/'>\n        <Switch>\n          <Route exact path=\"/\" component={Home}/>\n          <Route exact path=\"/programs\" component={Programs}/>\n          <Route exact path=\"/schedule\" component={Schedule}/>\n          <Route exact path=\"/stations\" component={Stations}/>\n          <Route component={NotFoundPage}/>\n        </Switch>\n      </HashRouter>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}